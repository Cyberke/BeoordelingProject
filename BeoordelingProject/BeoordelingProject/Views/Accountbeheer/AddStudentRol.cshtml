@model BeoordelingProject.ViewModel.AccountbeheerVM
@using Microsoft.AspNet.Identity

<div id="container">
    <a href="../Admin/Index" class="link">Overzicht</a>
    <label> > </label>
    <a href="../Adminpaneel/Index" class="link">Adminpaneel</a>
    <label> > <strong> Accountbeheer</strong></label>
    <br />
    @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
    {
        @Html.AntiForgeryToken()

        <b><a class="uitloggen" href="javascript:document.getElementById('logoutForm').submit()">Log uit.</a></b>
        @Html.Label("Welkom " + User.Identity.Name.Split('.')[0] + "!", new { @class = "username" })
    }
    <br /><br />
    @using (Html.BeginForm())
    {
        <label class="actionbutton tablebutton" onclick="toggleUserToevoegen()">Toevoegen</label>
    
        <div id="inklapdiv" style="display:none">
            <div class="login">
                <div class="gebruikerinfo">
                    @Html.Label("Gebruikersnaam")
                    @Html.EditorFor(model => model.Account.UserName)
                    @Html.ValidationMessageFor(model => model.Account.UserName)
                    <br />
                    @Html.Label("Wachtwoord")
                    @Html.PasswordFor(model => model.Account.PasswordHash, new { @class = "wachtwoordStudentrol" })
                    @Html.ValidationMessageFor(model => model.Account.PasswordHash)
                    <br />
                    <input type="submit" value="Gebruiker toevoegen" class="actionbutton" />
                </div>
                <div class="studentrolinfo">
                    Student:
                    @Html.DropDownListFor(modelItem => modelItem.SelectedStudentId, Model.Studenten as SelectList, new { id = "studentList" })
                    Rol:
                    @Html.DropDownListFor(modelItem => modelItem.SelectedRolId, Model.Rollen as SelectList, new { id = "rolList" })
            </div>
        </div>
    }}
    

    <table class="studentlist" style="display:block">
        <tr>
            <th>Naam</th>
            <th></th>
            <th></th>
        </tr>
        @foreach (var user in Model.Accounts)
        {
            //lists met foreach maken.
            <tr class="buttonTable">
                <td>@Html.DisplayFor(modelItem => user.UserName)</td>
                <td>@Html.ActionLink("Bewerken", "AddStudentRol", "Accountbeheer", null, new { @class = "actionbutton tablebutton" })</td>
                <td>@Html.ActionLink("Verwijderen", "DeleteUser", "Accountbeheer", new { userId = user.Id.ToString() }, new { @class = "actionbutton tablebutton" })</td>
            </tr>
        }
    </table>
</div>