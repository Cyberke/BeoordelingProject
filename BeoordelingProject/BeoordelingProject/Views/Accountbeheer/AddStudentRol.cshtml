@model BeoordelingProject.ViewModel.AccountbeheerVM
@using Microsoft.AspNet.Identity
@using BeoordelingProject.Helper

<div id="container">
    <a href="../Admin/Index" class="link">Overzicht</a>
    <label> > </label>
    <a href="../Adminpaneel/Index" class="link">Adminpaneel</a>
    <label> > <strong> Accountbeheer</strong></label>
    <br />
    @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
    {
        @Html.AntiForgeryToken()

        <b><a class="uitloggen" href="javascript:document.getElementById('logoutForm').submit()">Log uit.</a></b>
        @Html.Label("Welkom " + User.Identity.Name.Split('.')[0] + "!", new { @class = "username" })
    }
    <br /><br />
    @using (Html.BeginForm())
    {
        @ViewBag.Error<br />
        <label class="actionbutton tablebutton" onclick="toggleUserToevoegen()">Toevoegen</label>
    
        <div id="inklapdiv" style="display:none">
            <div class="login">
                <div class="gebruikerinfo">
                    @Html.Label("Gebruikersnaam")
                    @Html.EditorFor(model => model.Account.UserName)
                    @Html.ValidationMessageFor(model => model.Account.UserName)
                    <br />
                    @Html.Label("Wachtwoord")
                    @Html.PasswordFor(model => model.Account.PasswordHash, new { @class = "wachtwoordStudentrol" })
                    @Html.ValidationMessageFor(model => model.Account.PasswordHash)
                    <br />
                    <input type="submit" value="Gebruiker toevoegen" class="actionbutton" />
                </div>
                <div class="studentrolinfo">
                    <label class="actionbutton" onclick="newStudentRol()">+</label>

                    Student: 
                    <select id="studentList[0]">
                        @for (int i = 0; i < Model.Studenten.Count(); i++)
                        {
                            if(Model.SelectedStudentId != null && Model.SelectedStudentId[0].Equals(Model.Studenten[i].ID))
                            {
                                <option selected value="@Model.Studenten[i].ID">@Model.Studenten[i].Naam</option>
                            }
                            else
                            {
                                <option value="@Model.Studenten[i].ID">@Model.Studenten[i].Naam</option>
                            }
                            
                            
                        }
                    </select>

                    Rol: 
                    <select id="rolList[0]">
                        @for (int i = 0; i < Model.Rollen.Count(); i++)
                        {
                            if(Model.SelectedRolId != null && Model.SelectedRolId[0].Equals(Model.Rollen[i].ID))
                            {
                                <option selected value="@Model.Rollen[i].ID">@Model.Rollen[i].Naam</option>
                            }
                            else
                            {
                                <option value="@Model.Rollen[i].ID">@Model.Rollen[i].Naam</option>
                            }
                        }
                    </select>

                    @*
                        Student:
                        Html.DropDownListFor(modelItem => modelItem.SelectedStudentId, Model.Studenten as SelectList, new { id = "studentList[0]" })
                        Rol:
                        @Html.DropDownListFor(modelItem => modelItem.SelectedRolId, Model.Rollen as SelectList, new { id = "rolList[0]" })
                    *@
                    

                    @if(Model.SelectedStudentId != null)
                    {
                        
                        for (int s = 1; s < Model.SelectedStudentId.Count(); s++ )
                        {
                            <text>Student: </text>
                            <select>
                            @for (int i = 0; i < Model.Studenten.Count(); i++)
                            {
                                if(Model.SelectedStudentId[0].Equals(Model.Studenten[i].ID))
                            {
                                <option selected value="@Model.Studenten[i].ID">@Model.Studenten[i].Naam</option>
                            }
                            else
                            {
                                <option value="@Model.Studenten[i].ID">@Model.Studenten[i].Naam</option>
                            }

                            }
                            </select>
                            
                            <text> Rol: </text>
                            <select>
                            @for (int i = 0; i < Model.Rollen.Count(); i++)
                            {
                                if(Model.SelectedRolId[0].Equals(Model.Rollen[i].ID))
                            {
                                <option selected value="@Model.Rollen[i].ID">@Model.Rollen[i].Naam</option>
                            }
                            else
                            {
                                <option value="@Model.Rollen[i].ID">@Model.Rollen[i].Naam</option>
                            }

                            }
                            </select>
                            <br />
                        }
                       
                    }
                    
                </div>
            </div>
        </div>
    }

    <table class="userlist" style="display:block">
        <tr>
            <th>Naam</th>
            <th></th>
            <th></th>
        </tr>
        @foreach (var user in Model.Accounts)
        {
            //lists met foreach maken.
            <tr class="buttonTable">
                <td>@Html.DisplayFor(modelItem => user.UserName)</td>
                <td>@Html.ActionLink("Bewerken", "AddStudentRol", "Accountbeheer", null, new { @class = "actionbutton tablebutton" })</td>
                <td>@Html.ActionLink("Verwijderen", "DeleteUser", "Accountbeheer", new { userId = user.Id.ToString() }, new { @class = "actionbutton tablebutton" })</td>
            </tr>
        }
    </table>
</div>

<script>

    @functions{int counter = 1;}

    function newStudentRol()
    {
        /*
            min knop houd de waarde bij die de counter toen had.
            wanneer op de min knop geduwt wordt: for van de "minwaarde" tot de huidige counter en alle elementen die overeen komen verwijderen uit de div EN uit de arrays van studentId en rolId
        */
        var div = document.getElementsByClassName("studentrolinfo")[0];
        
        var studentlist = "<select id='studentList[@counter]'>";
        
        @for (int i = 0; i < Model.Studenten.Count(); i++)
        {
            if (Model.SelectedStudentId != null && Model.SelectedStudentId[counter].Equals(Model.Studenten[i].ID))
            {
                <text>studentlist += "<option selected value='@Model.Studenten[i].ID'>@Model.Studenten[i].Naam</option>";</text>
            }
            else
            {
                <text>studentlist += "<option value='@Model.Studenten[i].ID'>@Model.Studenten[i].Naam</option>";</text>
            }
        }
    
        studentlist += "</select>";

        var rollist = "<select id='rolList[@counter]'>";
        
        @for (int i = 0; i < Model.Rollen.Count(); i++)
        {
            if(Model.SelectedRolId != null && Model.SelectedRolId[counter].Equals(Model.Rollen[i].ID))
            {
                <text>rollist += "<option selected value='@Model.Rollen[i].ID'>@Model.Rollen[i].Naam</option>";</text>
            }
            else
            {
                <text>rollist += "<option value='@Model.Rollen[i].ID'>@Model.Rollen[i].Naam</option>";</text>
            }

        }
        rollist += "</select>";


        div.innerHTML += "<br/>Student: "+studentlist+" Rol: "+rollist;
        @{counter++;}
    }
</script>
